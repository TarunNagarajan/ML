# -*- coding: utf-8 -*-
"""04_nesterov_gradient.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XBvY2DYVgn-TcOF0BRlYYnOm8NAk0w6Z
"""

import numpy as np

def nesterov_gradient_descent(X, y, lr = 0.01, n_iters = 1000, momentum = 0.9):

  n_samples, n_features = X.shape
  w = np.zeros(n_features)
  v = np.zeros_like(w)
  history = []

  for _ in range(n_iters):
    w_lookahead = w - momentum * v
    pred = X.dot(w_lookahead)
    error = pred - y
    grad = (2 / n_samples) * X.T.dot(error)

    v = momentum * v + lr * grad
    w -= v
    loss = np.mean(error ** 2)
    history.append(loss)

  return w, history